import {decodeFunctionCall, encodeFunctionData} from "../ts-src/utils/abi";
import {
  TEST_ADDRESS_NEVER_USE,
  TEST_CONTRACT_ADDRESS,
} from "../ts-src/test-utils/data";
import {expect} from "chai";
import ERC20_ABI from "../ts-src/test-utils/abis/erc20.json";
import SwapRouter02Json from "@uniswap/swap-router-contracts/artifacts/contracts/SwapRouter02.sol/SwapRouter02.json";

describe("Abi Utils", () => {
  it("can encode call data", () => {
    const allowance = encodeFunctionData(ERC20_ABI, "allowance", [
      TEST_ADDRESS_NEVER_USE,
      TEST_CONTRACT_ADDRESS,
    ]);
    expect(allowance).to.eq(
      "0xdd62ed3e00000000000000000000000068d25464371f3a97691c52e40d4c1306af0b76290000000000000000000000001184a2e723e1ec42fae4aea53f4805d502ccef92"
    );
  });

  it("can decode a method call that it's method name is repeated in the contract", () => {
    const call = "0x5ae401dc0000000000000000000000000000000000000000000000000000000063ac33120000000000000000000000000000000000000000000000000000000000000040000000000000000000000000000000000000000000000000000000000000000500000000000000000000000000000000000000000000000000000000000000a000000000000000000000000000000000000000000000000000000000000001c000000000000000000000000000000000000000000000000000000000000002e00000000000000000000000000000000000000000000000000000000000000400000000000000000000000000000000000000000000000000000000000000052000000000000000000000000000000000000000000000000000000000000000e4472b43f30000000000000000000000000000000000000000000000015af1d78b58c400000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000008000000000000000000000000000000000000000000000000000000000000000020000000000000000000000000000000000000000000000000000000000000002000000000000000000000000b4fbf271143f4fbf7b91a5ded31805e42b2208d60000000000000000000000001f9840a85d5af5bf1d1762f925bdaddc4201f9840000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000e404e45aaf000000000000000000000000b4fbf271143f4fbf7b91a5ded31805e42b2208d60000000000000000000000001f9840a85d5af5bf1d1762f925bdaddc4201f98400000000000000000000000000000000000000000000000000000000000027100000000000000000000000000000000000000000000000000000000000000002000000000000000000000000000000000000000000000003860e639d80640000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000e404e45aaf000000000000000000000000b4fbf271143f4fbf7b91a5ded31805e42b2208d60000000000000000000000001f9840a85d5af5bf1d1762f925bdaddc4201f98400000000000000000000000000000000000000000000000000000000000001f400000000000000000000000000000000000000000000000000000000000000020000000000000000000000000000000000000000000000004563918244f40000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000e404e45aaf000000000000000000000000b4fbf271143f4fbf7b91a5ded31805e42b2208d60000000000000000000000001f9840a85d5af5bf1d1762f925bdaddc4201f9840000000000000000000000000000000000000000000000000000000000000bb800000000000000000000000000000000000000000000000000000000000000020000000000000000000000000000000000000000000000004563918244f4000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000064df2ab5bb0000000000000000000000001f9840a85d5af5bf1d1762f925bdaddc4201f9840000000000000000000000000000000000000000000000075345e096aac8546600000000000000000000000068d25464371f3a97691c52e40d4c1306af0b762900000000000000000000000000000000000000000000000000000000"
    const {method: decodedMethodName} = decodeFunctionCall(SwapRouter02Json.abi, call)
    expect(decodedMethodName).to.eq("multicall(uint256,bytes[])")
  })
});
